并行计算其实设计到两个不同的技术领域：

    计算机架构（硬件）
    并行程序设计（软件）

硬件主要的目标就是为软件提供更快的计算速度，更低的性能功耗比，硬件结构上支持更快的并行。
软件的主要目的是使用当前的硬件压榨出最高的性能，给应用提供更稳定快速的计算结果。

计算机结构一般是哈佛体系结构（后来演变出冯·诺依曼结构）主要分成三部分：

    内存（指令内存，数据内存）
    中央处理单元（控制单元和算数逻辑单元）
    输入、输出接口
    
    
    
为了提高并行的计算能力，我们要从架构上实现下面这些性能提升：

        降低延迟
        提高带宽
        提高吞吐量    
    
  延迟是指操作从开始到结束所需要的时间，一般用微秒计算，延迟越低越好。
  带宽是单位时间内处理的数据量，一般用MB/s或者GB/s表示。
  吞吐量是单位时间内成功处理的运算数量，一般用gflops来表示（十亿次浮点计算），
  吞吐量和延迟有一定关系，都是反应计算速度的，一个是时间除以运算次数，得到的是单位次数用的时间–延迟，一个是运算次数除以时间，得到的是单位时间执行次数–吞吐量。
  


CPU适合执行复杂的逻辑，比如多分支，其核心比较重（复杂）
GPU适合执行简单的逻辑，大量的数据计算，其吞吐量更高，但是核心比较轻（结构简单）

