andorid_交叉编译lib
1、# /home/qnn_work/qnn_sdk_v2.4.1/qnn-sdk-v2.4.1/workspace/alg_ndk/android-ndk-r14b/ndk-build APP_ALLOW_MISSING_DEPS=true APP_ABI="arm64-v8a" NDK_PROJECT_PATH=./ NDK_APPLICATION_MK=./Application.mk APP_BUILD_SCRIPT=./Android.mk
# /home/qnn_work/env/android-ndk-r19c-linux-x86_64/android-ndk-r19c/ndk-build APP_ALLOW_MISSING_DEPS=true APP_ABI="arm64-v8a" NDK_PROJECT_PATH=./ NDK_APPLICATION_MK=./Application.mk APP_BUILD_SCRIPT=./Android.mk
/home/8THDD/xuwenying/android-ndk-r19c/ndk-build APP_ALLOW_MISSING_DEPS=true APP_ABI="arm64-v8a" NDK_PROJECT_PATH=./ NDK_APPLICATION_MK=./Application.mk APP_BUILD_SCRIPT=./Android.mk

2\ application.mk

#APP_ABI:= armeabi-v7a
#APP_ABI:= armeabi armeabi-v7a arm64-v8a
#APP_ABI:= armeabi armeabi-v7a
APP_ABI      := arm64-v8a armeabi-v7a
APP_STL      := c++_shared
APP_PLATFORM := android-24
APP_CPPFLAGS += -std=c++11 -O3 -DQNN_API="__attribute__((visibility(\"default\")))"
APP_LDFLAGS  += -nodefaultlibs -lc -lm -ldl -lgcc

3\android.mk

LOCAL_PATH := $(call my-dir)
SUPPORTED_TARGET_ABI := arm64-v8a armeabi-v7a x86 x86_64

#============================ Verify Target Info and Application Variables =========================================
ifneq ($(filter $(TARGET_ARCH_ABI),$(SUPPORTED_TARGET_ABI)),)
    ifneq ($(APP_STL), c++_shared)
        $(error Unsupported APP_STL: "$(APP_STL)")
    endif
else
    $(error Unsupported TARGET_ARCH_ABI: '$(TARGET_ARCH_ABI)')
endif
#include $(CLEAR_VARS)

#OPENCV_LIB_TYPE:=SHARED
#OPENCV_LIB_TYPE:=STATIC
#OPENCV_INSTALL_MODULES:=on
#OPENCV_CAMERA_MODULES:=off

#include ./OpenCv3.4.7-Sdk/native/jni/OpenCV.mk

#TARGET_PLATFORM := android-24

#============================ Define Common Variables ===============================================================
# Include paths
PACKAGE_C_INCLUDES += -I $(LOCAL_PATH)/../src/include
PACKAGE_C_INCLUDES += -I $(LOCAL_PATH)/../src/
PACKAGE_C_INCLUDES += -I $(LOCAL_PATH)/../src/Infer
PACKAGE_C_INCLUDES += -I $(LOCAL_PATH)/../src/CachingUtil
PACKAGE_C_INCLUDES += -I $(LOCAL_PATH)/../src/Log
PACKAGE_C_INCLUDES += -I $(LOCAL_PATH)/../src/PAL/include
PACKAGE_C_INCLUDES += -I $(LOCAL_PATH)/../src/Utils
PACKAGE_C_INCLUDES += -I $(LOCAL_PATH)/../src/WrapperUtils
PACKAGE_C_INCLUDES += -I $(LOCAL_PATH)/../include/flatbuffers


#========================== Define OpPackage Library Build Variables =============================================
include $(CLEAR_VARS)
LOCAL_C_INCLUDES               := $(PACKAGE_C_INCLUDES)
MY_SRC_FILES                   += $(wildcard $(LOCAL_PATH)/../src/Infer/*.cpp)
MY_SRC_FILES                   += $(wildcard $(LOCAL_PATH)/../src/Log/*.cpp)
MY_SRC_FILES                   += $(wildcard $(LOCAL_PATH)/../src/PAL/src/linux/*.cpp)
MY_SRC_FILES                   += $(wildcard $(LOCAL_PATH)/../src/PAL/src/common/*.cpp)
MY_SRC_FILES                   += $(wildcard $(LOCAL_PATH)/../src/Utils/*.cpp)
MY_SRC_FILES                   += $(wildcard $(LOCAL_PATH)/../src/WrapperUtils/*.cpp)
LOCAL_MODULE    			         := libQnnInferEngien
LOCAL_SRC_FILES                := $(subst make/,,$(MY_SRC_FILES))
LOCAL_LDLIBS                   := -lGLESv2 -lEGL

include $(BUILD_SHARED_LIBRARY)
